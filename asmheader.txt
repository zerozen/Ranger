#subruledef math
{
    ADD => 0x0`3
    SUB => 0x1`3
    MUL => 0x2`3
    DIV => 0x3`3
    MOD => 0x4`3
}

#subruledef logic
{
    AND => 0x0`3
    OR => 0x1`3
    ROR => 0x4`3
    SLL => 0x5`3
    SLR => 0x6`3
    SAR => 0x7`3
}

#subruledef cond
{
	{} => 0b00000
	A => 0b00000
    C => 0b00001
    Z => 0b00010
    G => 0b00100
    E => 0b01000
}

#ruledef
{
MOV r{dst_num}, r{src1_num} {c:cond} => 0x0`3 @ src1_num`3 @ c`3 @ dst_num`3 @ 0x0
LOAD r{dst_num}, r{src1_num} {c:cond} => src1_num`3 @ 0x0`3 @ c`3 @ dst_num`3 @ 0x1
LOAD r{dst_num}, {value} => value`9 @ dst_num`3 @ 0x2
STOR r{dst_num}, r{src1_num} {c:cond} => dst_num`3 @ src1_num`3 @ c`3 @ 0x0`3 @ 0x3
ALU r{dst_num}, r{src1_num}, r{src2_num}, {m: math}  => src2_num`3 @ src1_num`3 @ m`3 @ 0x0`3 @ 0x4
ALU r{dst_num}, r{src1_num}, r{src2_num}, {l: logic}  => src2_num`3 @ src1_num`3 @ l`3 @ 0x0`3 @ 0x5
LOAD r{dst_num} {c:cond} => 0x0`6 @ c`3 @ dst_num`3 @ 0x6
INC r{dst_num}, {value} => value`9 @ dst_num`3 @ 0x7
DEC r{dst_num}, {value} => value`9 @ dst_num`3 @ 0x8
}